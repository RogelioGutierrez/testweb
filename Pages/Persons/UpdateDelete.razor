@page "/person/updel/{id}/{mode}"
@using ServerBlazorEF.Models
@inject ServerBlazorEF.Data.PersonService _personService
@inject NavigationManager NavManager

<PageTitle>Persona</PageTitle>

@if (person != null && Mode == "edit") // Update
{
    <p>Update Student with ID == @Id</p>
    <EditForm Model="@person" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name:</label>
            <InputText id="FirstName" class="form-control" @bind-Value="person.FirstName" />
        </div>

        <div class="form-group">
            <label for="LastName">Last Name:</label>
            <InputText id="LastName" class="form-control" @bind-Value="person.LastName" />
        </div>

        <button type="submit" class="btn btn-primary">Actualizar</button>
    </EditForm>

    @code {
        private async Task HandleValidSubmit()
        {
            await _personService.UpdateAsync(person!.PersonId, person);
            NavManager.NavigateTo("/person");
        }
    }
}
else if (person != null && Mode == "del")
{ // Delete
    // display student details
    <fieldset>
        <legend>Informacion de la persona</legend>
        <p>ID: @Id</p>
        <p>Name(s): @person.FirstName</p>
        <p>Apellidos: @person.LastName</p>
    </fieldset>
    <p>¿Esta seguro de eliminar a la persona?</p>
    <button type="button" class="btn btn-danger" @onclick="HandleStudent">Si, estoy seguro</button>
    @code {
    private async Task HandleStudent()

    {
        await _personService.DeleteAsync(person!.PersonId);
        NavManager.NavigateTo("/person");
    }
}
}
else
{
    <p>No se encontro ninguna persona con ese ID</p>
}

@code {
    [Parameter]
    public string? Id { get; set; }
    [Parameter]
    public string? Mode { get; set; }
    private Person? person = new Person();

    protected override async Task OnInitializedAsync()
    {
        int intId = Convert.ToInt32(Id);
        person = await _personService.GetByIdAsync(intId);
    }
}